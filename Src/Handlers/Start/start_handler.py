import logging
from aiogram import Router, types
from aiogram.filters import CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from database.database import SessionFactory
from database.repository import create_user
from menu import main_menu

router_start = Router(name="start")

start_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üèöÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]],
    resize_keyboard=True
)

@router_start.message(CommandStart())
async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username

    try:
        with SessionFactory() as session:
            create_user(session=session, event=message)

        reply_markup = await main_menu(user_id)

        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
            reply_markup=start_keyboard
        )

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@router_start.message(lambda message: message.text == "üèöÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def start_button_pressed(message: types.Message):
    user_id = message.from_user.id

    try:
        with SessionFactory() as session:
            create_user(session=session, event=message)

        reply_markup = await main_menu(user_id)

        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.",
            reply_markup=reply_markup
        )

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–ù–∞—á–∞—Ç—å': {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
